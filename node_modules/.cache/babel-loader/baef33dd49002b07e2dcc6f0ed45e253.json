{"ast":null,"code":"var _jsxFileName = \"/Users/manpingchen/Documents/[Udemy]-React-Complete-Guide/04-onwards-to-a-more-realistic-example/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./components/hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const requestConfig = {\n    url: \"https://react-movie-890b6-default-rtdb.firebaseio.com/tasks.json\",\n    method: \"GET\"\n  };\n  const {} = useHttp(requestConfig, transformTasksHandler);\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasksHandler = data => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({\n        id: taskKey,\n        text: data[taskKey].text\n      });\n    }\n\n    setTasks(loadedTasks);\n  }; // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-movie-890b6-default-rtdb.firebaseio.com/tasks.json\"\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Request failed!\");\n  //     }\n  //     const data = await response.json();\n  //     const loadedTasks = [];\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   setIsLoading(false);\n  // };\n\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = task => {\n    setTasks(prevTasks => prevTasks.concat(task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NewTask, {\n      onAddTask: taskAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      items: tasks,\n      loading: isLoading,\n      error: error,\n      onFetch: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZoZ523mINPjSSkoktM4FhbNNkAM=\", false, function () {\n  return [useHttp];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manpingchen/Documents/[Udemy]-React-Complete-Guide/04-onwards-to-a-more-realistic-example/src/App.js"],"names":["React","useEffect","useState","Tasks","NewTask","useHttp","App","requestConfig","url","method","transformTasksHandler","tasks","setTasks","data","loadedTasks","taskKey","push","id","text","fetchTasks","taskAddHandler","task","prevTasks","concat","isLoading","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAG;AACpBC,IAAAA,GAAG,EAAE,kEADe;AAEpBC,IAAAA,MAAM,EAAE;AAFY,GAAtB;AAIA,QAAM,KAAKJ,OAAO,CAACE,aAAD,EAAgBG,qBAAhB,CAAlB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,qBAAqB,GAAIG,IAAD,IAAU;AACtC,UAAMC,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,OAAX,IAAsBF,IAAtB,EAA4B;AAC1BC,MAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,OAAN;AAAeG,QAAAA,IAAI,EAAEL,IAAI,CAACE,OAAD,CAAJ,CAAcG;AAAnC,OAAjB;AACD;;AAEDN,IAAAA,QAAQ,CAACE,WAAD,CAAR;AACD,GARD,CARa,CAkBb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BT,IAAAA,QAAQ,CAAEU,SAAD,IAAeA,SAAS,CAACC,MAAV,CAAiBF,IAAjB,CAAhB,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAET,KAAd;AAAqB,MAAA,OAAO,EAAEa,SAA9B;AAAyC,MAAA,KAAK,EAAEC,KAAhD;AAAuD,MAAA,OAAO,EAAEN;AAAhE;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3DQb,G;UAKID,O;;;KALJC,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Tasks from \"./components/Tasks/Tasks\";\nimport NewTask from \"./components/NewTask/NewTask\";\nimport useHttp from \"./components/hooks/use-http\";\n\nfunction App() {\n  const requestConfig = {\n    url: \"https://react-movie-890b6-default-rtdb.firebaseio.com/tasks.json\",\n    method: \"GET\",\n  };\n  const {} = useHttp(requestConfig, transformTasksHandler);\n  const [tasks, setTasks] = useState([]);\n\n  const transformTasksHandler = (data) => {\n    const loadedTasks = [];\n\n    for (const taskKey in data) {\n      loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n    }\n\n    setTasks(loadedTasks);\n  };\n\n  // const fetchTasks = async (taskText) => {\n  //   setIsLoading(true);\n  //   setError(null);\n  //   try {\n  //     const response = await fetch(\n  //       \"https://react-movie-890b6-default-rtdb.firebaseio.com/tasks.json\"\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Request failed!\");\n  //     }\n\n  //     const data = await response.json();\n\n  //     const loadedTasks = [];\n\n  //     for (const taskKey in data) {\n  //       loadedTasks.push({ id: taskKey, text: data[taskKey].text });\n  //     }\n\n  //     setTasks(loadedTasks);\n  //   } catch (err) {\n  //     setError(err.message || \"Something went wrong!\");\n  //   }\n  //   setIsLoading(false);\n  // };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks items={tasks} loading={isLoading} error={error} onFetch={fetchTasks} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}